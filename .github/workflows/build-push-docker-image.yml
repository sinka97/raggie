name: build-push-docker-image

on:
  push:
    branches: [ "dev", "main" ]

env:
  REPO_NAME: raggie

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::021041863094:role/raggie-github-ecr-build-push
          aws-region: us-east-1

      - name: Extract version from version.json
        id: get-project-version
        run: |
          version=$(jq -r .version version.json)
          echo "Extracted version: $version"
          echo "PROJECT_VERSION=$version" >> $GITHUB_OUTPUT

      - name: Create .env file within app folder
        run: |
          echo "ANTHROPIC_API_KEY=${{ secrets.ANTHROPIC_KEY }}" > src/.env
          echo "ANTHROPIC_API_KEY=${{ secrets.ANTHROPIC_KEY }}" > src/.env

      - name: Build, tag, and push image to AWS ECR
        id: build-image
        env:
          AWS_REGION: ${{ vars.AWS_REGION }}
          ECR_REGISTRY: ${{ vars.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY_NAME }}
          IMAGE_TAG: ${{ env.REPO_NAME }}/:${{ steps.get-project-version.outputs.PROJECT_VERSION }}
        run: |
          # Build a docker container and push it to ECR so that it can be deployed to ECS.
          aws ecr get-login-password --region $AWS_REGION | docker login -u AWS --password-stdin $ECR_REGISTRY
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT